{"version":3,"sources":["atom.js","Pages/Home.js","Pages/Register.js","Pages/Login.js","Components/Navbar.js","App.js","index.js"],"names":["account","atom","key","default","persistence_UNSTABLE","type","Home","useRecoilValue","accountAtom","Register","history","useHistory","useForm","handleSubmit","register","errors","watch","useState","Err","setErr","onsubmit","a","axios","post","then","data","push","catch","err","response","status","message","className","onSubmit","width","name","placeholder","ref","required","icon","faUser","firstName","lastName","pattern","value","faEnvelope","email","minLength","faLock","password","validate","cf_password","to","Login","useRecoilState","setAccount","expire","Date","getTime","Axios","res","console","log","Cookies","set","token","expires","Navbar","props","accountData","setAccountData","isLogined","onClick","remove","App","get","localStorage","removeItem","exact","path","recoilPersist","RecoilPersist","updateState","ReactDOM","render","StrictMode","initializeState","document","getElementById"],"mappings":"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","file":"static/js/main.f6c2ee89.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const account = atom({\r\n    key: \"account\",\r\n    default:{},\r\n    persistence_UNSTABLE: {\r\n        type: 'account'\r\n    }\r\n})","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport {account as accountAtom} from '../atom';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n    const account = useRecoilValue(accountAtom)\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUser, faEnvelope } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/register.css\";\r\n\r\nexport default function Register() {\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, watch } = useForm();\r\n  const [Err, setErr] = useState(\"\");\r\n\r\n  const accountInitialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cf_password: \"\",\r\n  };\r\n\r\n  const onsubmit = async (account) => {\r\n    await axios\r\n      .post(\"http://localhost:5000/account\", account)\r\n      .then((data) => {\r\n        history.push(\"/login\");\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        if (\r\n          err.response.data.status === \"Error\" &&\r\n          err.response.data.message === \"email already registed\"\r\n        ) {\r\n          setErr(\"email is already registered\");\r\n        }\r\n      });\r\n\r\n    // console.log(account);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <section className=\"reg-left\">\r\n        <form className=\"reg-form\" onSubmit={handleSubmit(onsubmit)}>\r\n          <div className=\"header\">\r\n            <h1>Register</h1>\r\n            <hr width=\"25%\" />\r\n            <h4>Create account for free</h4>\r\n          </div>\r\n          {<h3 className=\"err_msg\" >{Err}</h3>}\r\n          <div className=\"reg-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              ref={register({\r\n                required: \"Required\",\r\n              })}\r\n            />\r\n            <FontAwesomeIcon icon={faUser} />\r\n          </div>\r\n          {errors.firstName && <h5 className=\"err_msg\">This is Required</h5>}\r\n\r\n          <div className=\"reg-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              ref={register({\r\n                required: \"Required\",\r\n              })}\r\n            />\r\n            <FontAwesomeIcon icon={faUser} />\r\n          </div>\r\n          {errors.lastName && <h5 className=\"err_msg\">This is Required</h5>}\r\n\r\n          <div className=\"reg-input\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              ref={register({\r\n                required: \"Required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n            <FontAwesomeIcon icon={faEnvelope} />\r\n          </div>\r\n          {errors.email && <h5 className=\"err_msg\">This is Required</h5>}\r\n          <div className=\"reg-input\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              ref={register({\r\n                required: \"Required\",\r\n                minLength: 6,\r\n              })}\r\n            />\r\n            <FontAwesomeIcon icon={faLock} />\r\n          </div>\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <h5 className=\"err_msg\">This is Required</h5>\r\n          )}\r\n\r\n          {errors.password && errors.password.type === \"minLength\" && (\r\n            <h5 className=\"err_msg\">This field required min length 6</h5>\r\n          )}\r\n\r\n          <div className=\"reg-input\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"cf_password\"\r\n              placeholder=\"Confirm password\"\r\n              ref={register({\r\n                required: \"Required\",\r\n                validate: (value) => value === watch(\"password\"),\r\n              })}\r\n            />\r\n            <FontAwesomeIcon icon={faLock} />\r\n          </div>\r\n          {errors.cf_password && errors.cf_password.type === \"required\" && (\r\n            <h5 className=\"err_msg\">This is Required</h5>\r\n          )}\r\n\r\n          {errors.cf_password && errors.cf_password.type === \"validate\" && (\r\n            <h5 className=\"err_msg\">Passwords don't match</h5>\r\n          )}\r\n\r\n          <div className=\"reg-submit\">\r\n            <input type=\"submit\" value=\"Register\" />\r\n            <Link to=\"/login\">Already have an account ?</Link>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <section className=\"reg-right\"></section>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEnvelope } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/login.css\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { account as accountAtom } from \"../atom\";\r\n\r\nexport default function Login() {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const [Err, setErr] = useState(\"\");\r\n  const [account,setAccount] = useRecoilState(accountAtom);\r\n  var expire = new Date(new Date().getTime()+60*60*1000);\r\n\r\n\r\n  const onsubmit = async (account) => {\r\n    await Axios.post(\"http://localhost:5000/account/login\", account)\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        Cookies.set('token',res.data.token,{expires:expire});\r\n        setAccount(res.data.account)\r\n\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <section className=\"login-left\"></section>\r\n      <section className=\"login-right\">\r\n        <form className=\"reg-form\" onSubmit={handleSubmit(onsubmit)}>\r\n          <div className=\"header\">\r\n            <h1>Log in</h1>\r\n            <hr width=\"25%\" />\r\n            <h4>Work too much ? Let's \"Split\"</h4>\r\n          </div>\r\n\r\n          <div className=\"reg-input\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              ref={register({\r\n                required: \"Required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n            <FontAwesomeIcon icon={faEnvelope} />\r\n          </div>\r\n          {errors.email && <h5 className=\"err_msg\">This is Required</h5>}\r\n          <div className=\"reg-input\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              ref={register({\r\n                required: \"Required\",\r\n                minLength: 6,\r\n              })}\r\n            />\r\n            <FontAwesomeIcon icon={faLock} />\r\n          </div>\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <h5 className=\"err_msg\">This is Required</h5>\r\n          )}\r\n\r\n          {errors.password && errors.password.type === \"minLength\" && (\r\n            <h5 className=\"err_msg\">This field required min length 6</h5>\r\n          )}\r\n\r\n          <div className=\"reg-submit\">\r\n            <input type=\"submit\" value=\"Login\" />\r\n            <Link to=\"/register\">Don't have an account ?</Link>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport { useRecoilValue, atom } from \"recoil\";\r\nimport { account as accountAtom } from \"../atom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n\r\n\r\n\r\nimport '../css/navbar.css';\r\n\r\nexport default function Navbar(props) {\r\n    const history = useHistory();\r\n    const [accountData , setAccountData] = useRecoilState(accountAtom);\r\n\r\n\r\n    const handleLogout = () =>{\r\n        Cookies.remove('token');\r\n        setAccountData({});\r\n        history.push('/');\r\n        \r\n    }\r\n    \r\n    const account = useRecoilValue(accountAtom)\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <ul className=\"logo\">\r\n                <Link to=\"/\">\r\n                <li>Trip<span>Seek</span></li>\r\n                </Link>\r\n            </ul> \r\n            <ul className=\"nav-btn\">\r\n                { props.isLogined?  \r\n                <>\r\n                    {accountData.email}\r\n                    <button className=\"login-btn\" onClick={handleLogout}>Log Out</button> \r\n                </>\r\n                    :\r\n                <>\r\n                <li><Link to=\"/login\"> <button className=\"login-btn\">Log in</button></Link></li>\r\n                <li> <Link to=\"/register\" >  <button className=\"reg-btn\">Register</button> </Link> </li> \r\n                </>\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\n//Pages import\nimport Home from \"./Pages/Home\";\nimport Register from \"./Pages/Register\";\nimport Login from \"./Pages/Login\";\nimport Cookies from \"js-cookie\";\nimport { useRecoilValue } from \"recoil\";\nimport { account as accountAtom } from '../src/atom';\n\nimport Navbar from \"./Components/Navbar\";\n\nfunction App() {\n  const account = useRecoilValue(accountAtom)\n  const token = Cookies.get('token') \n  \n  const checkLogin = () =>{\n    if(!(account && token)){\n      localStorage.removeItem('recoil-persist');\n      Cookies.remove('token');\n      return false;\n    } else{\n      return true;\n    }\n  }\n\n  const isLogined = checkLogin();\n\n\n  return (\n    \n    <Router>\n    <Navbar isLogined={isLogined} />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route path=\"/register\">\n        { isLogined? <Redirect to=\"/\"/>: <Register /> }\n        </Route>\n\n        <Route path=\"/login\">\n          { isLogined? <Redirect to=\"/\"/>: <Login /> }\n        </Route>\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport recoilPersist from 'recoil-persist';\n\nconst { RecoilPersist, updateState } = recoilPersist();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot initializeState={updateState}>\n      <RecoilPersist />\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}